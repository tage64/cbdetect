# AUTOGENERATED! DO NOT EDIT! File to edit: 00_fen2img.ipynb (unless otherwise specified).

__all__ = ["load_svg", "fen2img"]

# Cell
from io import BytesIO

import PIL.Image
import PIL.ImageDraw
from cairosvg import svg2png


# Cell
def load_svg(svg_filename, width, height):
    png = svg2png(url=svg_filename, output_width=width, output_height=height)
    assert isinstance(png, bytes)
    return BytesIO(png)


# Cell
def fen2img(fen, board_size, board_style, boards_path, piece_style, pieces_path):
    """Convert fen string to image.
    Returns:
      - PIL.Image
    """
    board_filename = f"{boards_path}/{board_style}.svg"
    board_image = PIL.Image.open(load_svg(board_filename, board_size, board_size))
    piece_width, piece_height = board_size // 8, board_size // 8
    for i, row in enumerate(fen.split("/")):
        j = 0
        for col in row:
            if col >= "1" and col <= "9":
                j += int(col)
            else:
                piece = "w" + col.upper() if col >= "a" and col <= "z" else "b" + col
                piece_filename = f"{pieces_path}/{piece_style}/{piece}.png"
                piece_image = PIL.Image.open(piece_filename)
                piece_image = piece_image.convert("RGBA")  # Convert to RGBA format
                piece_image = piece_image.resize((piece_width, piece_height))
                board_image.paste(piece_image, (j * piece_height, i * piece_width), piece_image)
                j += 1
    return board_image
